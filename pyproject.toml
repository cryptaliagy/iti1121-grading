[project]
name = "grader"
version = "0.1.0"
description = "A CLI tool to auto-grade ITI 1121 assignments at the University of Ottawa."
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
authors = [{ name = "Natalia Maximo", email = "natalia.maximo@uottawa.ca" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "typer (>=0.16.0,<0.17.0)",
    "pandas (>=2.0.0,<3.0.0)",
    "unidecode (>=1.3.0,<2.0.0)",
    "rich (>=13.0.0,<14.0.0)",
    "pandas-stubs (>=2.2.3.250527,<3.0.0.0)",
    "thefuzz (>=0.22.1,<0.23.0)",
]

[project.scripts]
grader = "grader.__main__:app"

[build-system]
requires = ["uv_build>=0.7.14,<0.8.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "bandit[toml]>=1.8.5",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
files = "src/**/*.py"

[tool.bandit]
targets = ["src"]
exclude_dirs = ["test", "tests"]
